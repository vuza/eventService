---
- name: create download directory
  file:
    state: directory
    mode: 'u=rwx,go=rx'
    dest: '{{ gitkraken_download_dir }}'

- name: ensure ca-certificates installed
  become: yes
  apt:
    name: ca-certificates
    state: present

- name: check for etag file
  stat:
    path: '{{ gitkraken_etag_path }}'
  register: etag_file_test

- name: read etag file
  slurp:
    src: '{{ gitkraken_etag_path }}'
  register: etag_file
  when: etag_file_test.stat.exists

- name: set existing etag fact
  set_fact:
    gitkraken_existing_etag: '{{ etag_file.content | b64decode }}'
  when: etag_file_test.stat.exists

- name: check latest remote GitKraken version
  uri:
    url: '{{ gitkraken_redis_url }}'
    method: HEAD
    follow_redirects: safe
  always_run: yes
  register: head_query

- name: set latest etag fact
  set_fact:
    gitkraken_latest_etag: '{{ head_query.etag }}'

- name: download GitKraken
  get_url:
    url: '{{ gitkraken_redis_url }}'
    dest: '{{ gitkraken_download_dir }}/{{ gitkraken_redis_filename }}'
    force: '{{ gitkraken_latest_etag != gitkraken_existing_etag }}'
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'

- name: update etag file
  copy:
    content: '{{ gitkraken_latest_etag }}'
    dest: '{{ gitkraken_etag_path }}'

- name: install GitKraken dependencies
  become: yes
  apt:
    name: gvfs-bin
    state: present

- name: install GitKraken
  become: yes
  apt:
    deb: '{{ gitkraken_download_dir }}/{{ gitkraken_redis_filename }}'
